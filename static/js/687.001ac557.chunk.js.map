{"version":3,"file":"static/js/687.001ac557.chunk.js","mappings":"iSAOaA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OAAQA,EAAOC,MACb,IAAK,QACHP,EAASM,EAAOE,OAChB,MACF,IAAK,WACHN,EAAYI,EAAOE,OAKxB,EASD,OACE,+BACE,UAACC,EAAA,EAAD,CAAKC,UAAU,OAAOC,SATJ,SAAAC,GACpBA,EAAMC,iBACNV,GAASW,EAAAA,EAAAA,IAAM,CAAEf,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,GACb,EAIG,WACE,UAACa,EAAA,EAAD,CAAYC,QAAQ,QAApB,sBACU,mCADV,yBAGA,SAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,aAAc,QACpBC,WAAW,SACXJ,QAAQ,WACRT,KAAK,QACLc,KAAK,QACLb,MAAOT,EACPuB,QAASjB,EACTkB,UAAQ,EACRC,WAAW,KAEb,SAACP,EAAA,EAAD,CACEC,GAAI,CAAEC,aAAc,QACpBC,WAAW,YACXJ,QAAQ,WACRT,KAAK,WACLc,KAAK,WACLb,MAAOP,EACPqB,QAASjB,EACTkB,UAAQ,EACRC,WAAW,KAEb,SAACC,EAAA,EAAD,CAAQJ,KAAK,SAASL,QAAQ,YAA9B,yBAMP,ECxDD,EARc,WACZ,OACE,SAACU,EAAA,EAAD,CAASC,MAAM,UAAf,UACE,SAAC9B,EAAD,KAGL,C,2BCPKY,GAAMmB,E,QAAAA,KAoBZ,K","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\n\nimport { Box } from '@mui/system';\nimport { Typography, TextField, Button } from '@mui/material';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const inputHandler = ({ target }) => {\n    switch (target.name) {\n      case 'email':\n        setEmail(target.value);\n        break;\n      case 'password':\n        setPassword(target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    dispatch(login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Box component=\"form\" onSubmit={submitHandler}>\n        <Typography variant=\"body1\">\n          Please, <b>sign in</b> to the phonebook:\n        </Typography>\n        <TextField\n          sx={{ marginBottom: '16px' }}\n          helperText=\"Email*\"\n          variant=\"outlined\"\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onInput={inputHandler}\n          required\n          fullWidth={true}\n        />\n        <TextField\n          sx={{ marginBottom: '16px' }}\n          helperText=\"Password*\"\n          variant=\"outlined\"\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          onInput={inputHandler}\n          required\n          fullWidth={true}\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Sign in\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Section } from '../components/Section';\nimport { LoginForm } from 'components/LoginForm';\n\nconst Login = () => {\n  return (\n    <Section title=\"Sign in\">\n      <LoginForm />\n    </Section>\n  );\n};\n\nexport default Login;\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","inputHandler","target","name","value","Box","component","onSubmit","event","preventDefault","login","Typography","variant","TextField","sx","marginBottom","helperText","type","onInput","required","fullWidth","Button","Section","title","createBox"],"sourceRoot":""}